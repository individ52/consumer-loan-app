{
	"info": {
		"_postman_id": "2714c516-56c4-4571-856a-6afb5454d2e5",
		"name": "consumer-loan-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19681724"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"demo@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/login",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "reg",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.email).to.be.equal(\"demo@gmail.com\");\r",
							"    pm.collectionVariables.set(\"token\", jsonData.accessToken);\r",
							"    pm.collectionVariables.set(\"userId\", jsonData.user.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"demo@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/registration",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "reg 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"demo@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/registration",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/logout",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.email).to.be.equal(\"demo@gmail.com\");\r",
							"    pm.collectionVariables.set(\"token\", jsonData.accessToken);\r",
							"    pm.collectionVariables.set(\"userId\", jsonData.user.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"demo@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"correct added loan\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.amount).to.eql(1000);\r",
							"    pm.expect(jsonData.term).to.eql(12);\r",
							"    pm.expect(jsonData.name).to.eql(\"For new MacBook\");\r",
							"\r",
							"    pm.collectionVariables.set(\"loanId\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 12,\r\n    \"name\": \"For new MacBook\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Warning! You can apply loan only once in 24 hours. You have 3 attempts left.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 3,\r\n    \"name\": \"For new TV\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							" pm.expect(jsonData.message).to.eql(\"Warning! You can apply loan only once in 24 hours. You have 2 attempt(s) left.\");\r",
							" });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 3,\r\n    \"name\": \"For new TV\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"     pm.expect(jsonData.message).to.eql(\"Warning! You can apply loan only once in 24 hours. You have 1 attempt(s) left.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 3,\r\n    \"name\": \"For new TV\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"You achieved warning count limit! Now you are blocked, please, connect with administration to be unblocked!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 3,\r\n    \"name\": \"For new TV\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User is blocked!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 3,\r\n    \"name\": \"For new TV\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "get borrower loans",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 90,\r\n    \"name\": \"For new TV\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/borrower/{{userId}}/loans",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"borrower",
						"{{userId}}",
						"loans"
					]
				}
			},
			"response": []
		},
		{
			"name": "unblock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/borrower/{{userId}}/unblock",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"borrower",
						"{{userId}}",
						"unblock"
					]
				}
			},
			"response": []
		},
		{
			"name": "apply loan 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Warning! You can apply loan only once in 24 hours. You have 2 attempt(s) left.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"borrowerId\": \"{{userId}}\",\r\n    \"amount\": 1000,\r\n    \"term\": 12,\r\n    \"name\": \"For new MacBook\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/loan/apply",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get loan 5 equal shares shedule",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(12);\r",
							"    var last = jsonData[jsonData.length - 1];\r",
							"    pm.expect(last.outstandingBalance - last.principalPayment).to.be.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/loan/{{loanId}}/equal-shares-shedule",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"{{loanId}}",
						"equal-shares-shedule"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get loan 5 Differentiated payment shedule",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(12);\r",
							"    var last = jsonData[jsonData.length - 1];\r",
							"    pm.expect(last.outstandingBalance - last.principalPayment).to.be.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/loan/{{loanId}}/differentiated-payment-shedule",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"loan",
						"{{loanId}}",
						"differentiated-payment-shedule"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "loanId",
			"value": ""
		}
	]
}